name: Component Review

on:
  pull_request:
    paths:
      - 'apps/registry/registry/**/*.tsx'
      - 'apps/registry/registry/**/*.ts'
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  review-component:
    if: |
      (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'new-component')) ||
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude review'))
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
          
      - name: Install dependencies
        run: |
          bun install
          cd apps/showcase && bunx shadcn@latest add button card dialog
          cd ../registry && bunx shadcn@latest add button card dialog
          
      - name: Type check
        id: typecheck
        continue-on-error: true
        run: |
          echo "## Type Check Results" >> $GITHUB_STEP_SUMMARY
          cd apps/showcase && bunx tsc --noEmit 2>&1 | tee -a $GITHUB_STEP_SUMMARY || true
          cd ../registry && bunx tsc --noEmit 2>&1 | tee -a $GITHUB_STEP_SUMMARY || true
          
      - name: Check for forbidden patterns
        id: patterns
        run: |
          echo "## Pattern Check Results" >> $GITHUB_STEP_SUMMARY
          
          # Check for 'any' usage
          if grep -r "\bany\b" apps/registry/registry/new-york --include="*.tsx" --include="*.ts"; then
            echo "‚ùå Found 'any' type usage" >> $GITHUB_STEP_SUMMARY
            echo "found_any=true" >> $GITHUB_OUTPUT
          else
            echo "‚úÖ No 'any' type usage found" >> $GITHUB_STEP_SUMMARY
            echo "found_any=false" >> $GITHUB_OUTPUT
          fi
          
          # Check for hardcoded colors
          if grep -rE "bg-(red|blue|green|yellow|purple|pink|gray)-[0-9]+" apps/registry/registry/new-york --include="*.tsx"; then
            echo "‚ùå Found hardcoded color classes" >> $GITHUB_STEP_SUMMARY
            echo "found_colors=true" >> $GITHUB_OUTPUT
          else
            echo "‚úÖ No hardcoded colors found" >> $GITHUB_STEP_SUMMARY
            echo "found_colors=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Run Claude Code Review
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          max_turns: 5
          
      - name: Post review summary
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const typeCheckFailed = '${{ steps.typecheck.outcome }}' === 'failure';
            const foundAny = '${{ steps.patterns.outputs.found_any }}' === 'true';
            const foundColors = '${{ steps.patterns.outputs.found_colors }}' === 'true';
            
            let comment = '## ü§ñ Automated Component Review\n\n';
            
            if (typeCheckFailed || foundAny || foundColors) {
              comment += '### ‚ùå Issues Found\n\n';
              if (typeCheckFailed) comment += '- TypeScript errors detected\n';
              if (foundAny) comment += '- Usage of `any` type found\n';
              if (foundColors) comment += '- Hardcoded color classes found\n';
              comment += '\nPlease address these issues before merging.\n';
            } else {
              comment += '### ‚úÖ All checks passed!\n';
            }
            
            comment += '\n### Next Steps\n';
            comment += '1. Review Claude\'s detailed feedback above\n';
            comment += '2. Run `bun registry:build` to test registry generation\n';
            comment += '3. Add documentation to showcase\n';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  visual-test:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: review-component
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        
      - name: Install dependencies
        run: bun install
        
      - name: Build showcase
        run: cd apps/showcase && bun run build
        
      - name: Install Playwright
        run: bunx playwright install chromium
        
      - name: Generate screenshots
        run: |
          cd apps/showcase
          bunx playwright test visual --reporter=html
          
      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        with:
          name: component-screenshots
          path: apps/showcase/test-results/
          retention-days: 7